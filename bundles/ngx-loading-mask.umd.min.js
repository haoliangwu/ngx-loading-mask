!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("rxjs/BehaviorSubject"),require("rxjs/operators"),require("@angular/cdk/portal"),require("rxjs/observable/of"),require("rxjs/observable/empty"),require("@angular/common/http")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","rxjs/BehaviorSubject","rxjs/operators","@angular/cdk/portal","rxjs/observable/of","rxjs/observable/empty","@angular/common/http"],e):e(t["ngx-loading-mask"]={},t.ng.core,t.ng.common,t.Rx,t.Rx.Observable.prototype,t.ng.cdk.portal,t.Rx.Observable,t.Rx.Observable,t.ng.common.http)}(this,function(t,e,o,n,r,i,s,a,p){"use strict";var u={snippet:{imgUrl:null,size:144},mask:{bgColor:"rgba(255, 255, 255, .7)"},clsMapping:{mask:"ngx-loading-mask",snip:"ngx-loading-snip"},debug:!1},c="X-Loading-Mask",l="default_mask_group",g=new e.InjectionToken("ngx.loadingMask.config"),h={INIT:"__init__",PENDING:"pending",DONE:"done",ERROR:"error"},d=function(){function t(t){this.config=t,this.isSnipPreload=!1,this.uuid=1,this.loadingEvent$=new n.BehaviorSubject({id:"__init__",status:h.INIT}),this.bootstrap()}return t.prototype.subscribe=function(t){return t?this.loadingEvent$.pipe(r.filter(function(e){return e.id===t})):this.loadingEvent$.asObservable()},t.prototype.register=function(t,e){return void 0===t&&(t=l),void 0===e&&(e=!1),0===t.length&&(t=l),this.isDefaultGroup(t)?this.getGroup(t,!0):this.setGroup(t,e)},t.prototype.unregister=function(t){if(this.isDefaultGroup(t))throw new Error("cannot unregister default loading mask group");if(!this.maskGroupMap.has(t))throw new Error("cannot unregister non-existed loading mask group");var e=this.getGroup(t);e.instances--,0===e.instances&&this.maskGroupMap["delete"](t)},t.prototype.isDefaultGroup=function(t){return t===l},t.prototype.isDoneGroup=function(t){return t.done===t.pending},t.prototype.getGroup=function(t,e){return void 0===e&&(e=!1),this.maskGroupMap.has(t)?this.maskGroupMap.get(t):e?this.setGroup(t):void 0},t.prototype.setGroup=function(t,e){var o;return void 0===e&&(e=!1),!e&&this.maskGroupMap.has(t)?o=this.getGroup(t):(o=this.maskGroupFactory(t),this.maskGroupMap.set(t,o)),o.instances++,o},t.prototype.showGroup=function(t){void 0===t&&(t=l),this.loadingEvent$.next(this.loadingEventFactory(t,h.PENDING))},t.prototype.hideGroup=function(t){void 0===t&&(t=l),this.loadingEvent$.next(this.loadingEventFactory(t,h.DONE))},t.prototype.hideGroupError=function(t,e){void 0===t&&(t=l),this.loadingEvent$.next(this.loadingEventFactory(t,h.ERROR,e))},t.prototype.preloadImage=function(){var t=this;if(!this.isSnipPreload){var e=this.config.snippet.imgUrl;console.group("starting preload snip image from:",e),this.isSnipPreload=!0;var o=new Image;o.src=e,o.onload=function(){console.log("preloaded sucessfully"),console.groupEnd(),t.isSnipPreload=!0},o.onerror=function(){console.log("preloaded met some error"),console.groupEnd(),t.isSnipPreload=!1}}},t.prototype.bootstrap=function(){this.maskGroupMap=new Map,this.setGroup(l,!0)},t.prototype.loadingEventFactory=function(t,e,o){return{id:t,status:e,data:o}},t.prototype.maskGroupFactory=function(t){return{uuid:this.uuid++,id:t,pending:0,done:0,isError:!1,instances:0}},t}();d.decorators=[{type:e.Injectable}],d.ctorParameters=function(){return[{type:undefined,decorators:[{type:e.Inject,args:[g]}]}]};var f=function(t,e){console.group("group %s is "+e,t.id),console.log(t),console.groupEnd()},m=function(){function t(t,e,o,n,r,i){this.config=t,this.service=e,this.componentFactoryResolver=o,this.appRef=n,this.injector=r,this.el=i,this.isDefault=!1}return t.prototype.ngOnInit=function(){var t=this;this.group=this.service.register(this.ngxLoadingMask),this.config=Object.assign(u,this.config),this.service.preloadImage();var e=this.group.id;this.isDefault=this.service.isDefaultGroup(e),this.loadingEvent$=this.service.subscribe(e),this.loadingSnipPortal=new i.ComponentPortal(y),this.portalHostEl=this.service.isDefaultGroup(e)?document.body:this.el.nativeElement,this.portalHost=new i.DomPortalHost(this.portalHostEl,this.componentFactoryResolver,this.appRef,this.injector),this.subscription=this.loadingEvent$.pipe(r.flatMap(function(e){return s.of(e).pipe(r.tap(function(e){return t.handleEvent(e)}),r.catchError(function(t,e){return console.error(t),a.empty()}))})).subscribe()},t.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},t.prototype.handleEvent=function(t){switch(t.status){case h.PENDING:if(this.group.pending++,this.group.isError&&(this.group.isError=!1),this.config.debug&&f(this.group,h.PENDING),this.portalHost.hasAttached())return;this.reveal();break;case h.DONE:this.group.done++,this.config.debug&&f(this.group,h.DONE),this.service.isDoneGroup(this.group)&&(this.group.done=0,this.group.pending=0,this.hide());break;case h.ERROR:this.group.done=0,this.group.pending=0,this.group.isError=!0,this.config.debug&&f(this.group,h.ERROR),this.hideError(t.data)}},t.prototype.reveal=function(){this.portalHost.attach(this.loadingSnipPortal)},t.prototype.hide=function(){this.portalHost.detach()},t.prototype.hideError=function(t){throw this.hide(),new Error(t)},t}();m.decorators=[{type:e.Directive,args:[{selector:"[ngxLoadingMask]",exportAs:"mask"}]}],m.ctorParameters=function(){return[{type:undefined,decorators:[{type:e.Inject,args:[g]}]},{type:d},{type:e.ComponentFactoryResolver},{type:e.ApplicationRef},{type:e.Injector},{type:e.ElementRef,decorators:[{type:e.Host}]}]},m.propDecorators={ngxLoadingMask:[{type:e.Input}],maskTplRef:[{type:e.ContentChild,args:["mask"]}]};var y=function(){function t(t,e){this.config=t,this.mask=e}return Object.defineProperty(t.prototype,"maskCls",{get:function(){return[this.cls.mask,this.mask.isDefault?"global":""]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maskStyle",{get:function(){return{background:this.bgColor}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"snipCls",{get:function(){return this.cls.snip},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"snipStyle",{get:function(){return{"width.px":this.size,"height.px":this.size}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.config=Object.assign(u,this.config),this.cls=this.config.clsMapping,this.imgUrl=this.config.snippet.imgUrl,this.size=this.config.snippet.size,this.bgColor=this.config.mask.bgColor},t}();y.decorators=[{type:e.Component,args:[{selector:"ngx-loading-snip",encapsulation:e.ViewEncapsulation.None,template:'<div class="loading-mask-base" [ngClass]="maskCls" [ngStyle]="maskStyle">\n  <div class="loading-snip-base" [ngClass]="snipCls">\n    <img *ngIf="!mask.maskTplRef" [attr.src]="imgUrl" [ngStyle]="snipStyle"/>\n    <ng-container *ngIf="mask.maskTplRef">\n        <ng-container *ngTemplateOutlet="mask.maskTplRef">\n        </ng-container>\n      </ng-container>\n  </div>\n</div>\n',styles:[".loading-mask-base {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  z-index: 99; }\n  .loading-mask-base.global {\n    position: fixed;\n    width: 100vw;\n    height: 100vh; }\n\n.loading-snip-base {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%); }\n"]}]}],y.ctorParameters=function(){return[{type:undefined,decorators:[{type:e.Inject,args:[g]}]},{type:m}]};var v=function(){function t(t){this.service=t}return t.prototype.intercept=function(t,e){var o=this;if(t.headers.has(c)){var n=t.headers.get(c);return t=t.clone({headers:t.headers["delete"](c)}),this.service.showGroup(n),e.handle(t).pipe(r.tap(function(t){t instanceof p.HttpResponse&&o.service.hideGroup(n)},function(t){t instanceof p.HttpErrorResponse&&o.service.hideGroupError(n,t)}))}return e.handle(t)},t}();v.decorators=[{type:e.Injectable}],v.ctorParameters=function(){return[{type:d}]};var b=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[d,{useValue:e,provide:g},{provide:p.HTTP_INTERCEPTORS,useClass:v,multi:!0}]}},t}();b.decorators=[{type:e.NgModule,args:[{imports:[o.CommonModule],declarations:[y,m],exports:[m],entryComponents:[y]}]}],b.ctorParameters=function(){return[]},t.LoadingMaskModule=b,t.DEFAULT_CONFIG=u,t.LOADING_MASK_HEADER=c,t.DEFAULT_MASK_GROUP=l,t.CONFIG=g,t.ɵc=m,t.ɵe=v,t.ɵd=d,t.ɵa=y,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-loading-mask.umd.min.js.map
